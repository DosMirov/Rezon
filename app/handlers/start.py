from aiogram import Router, F, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from app.utils.time import get_daystamp
from app.session import get_session, set_state  # üëà RAM FSM API

router = Router()  # —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º router

def make_brief_id(user_id: int, day: str) -> str:
    return f"BRF-{user_id}_{day}"

@router.message(F.text, F.text.startswith("/start"))
async def cmd_start(message: types.Message):
    print("HANDLER /start TRIGGERED", flush=True)

    # 1. RAM-—Å–µ—Å—Å–∏—è, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è + state
    user_id = message.from_user.id
    get_session(user_id)
    set_state(user_id, "WELCOME")

    brief_id = make_brief_id(user_id, get_daystamp())

    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="complete_session")]
        ]
    )
    await message.answer(
        (
            "üß≠ REZON_X ‚Äî –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä\n\n"
            f"<b>Brief-ID:</b> <code>{brief_id}</code>\n"
            "–û—Ç–ø—Ä–∞–≤–ª—è–π —Å–æ–æ–±—â–µ–Ω–∏—è-—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å ‚Äî –∂–º–∏ –∫–Ω–æ–ø–∫—É."
        ),
        reply_markup=kb,
        parse_mode="HTML",
    )
